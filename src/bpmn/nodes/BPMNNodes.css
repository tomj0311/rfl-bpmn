/* Start Event Node */
.start-event-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.start-event-circle {
  width: 40px;
  height: 40px;
  border: 2px solid var(--success-color);
  border-radius: 50%;
  background: var(--success-bg-light);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* End Event Node */
.end-event-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.end-event-circle {
  width: 40px;
  height: 40px;
  border: 3px solid var(--danger-color);
  border-radius: 50%;
  background: var(--danger-bg-light);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Task Node */
.task-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.task-content {
  width: 100px;
  height: 60px;
  border: 1px solid var(--accent-color);
  border-radius: 6px;
  background: var(--accent-bg-light);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  position: relative;
}

.task-type-icon {
  position: absolute;
  top: 4px;
  left: 4px;
  font-size: 12px;
  line-height: 1;
  min-width: 14px;
  text-align: center;
  z-index: 1;
}

/* Task node specific handle positioning */
.task-node .handle {
  position: absolute;
  z-index: 20;
  pointer-events: all;
  cursor: crosshair;
}

/* Ensure handles are properly positioned relative to the task content */
.task-node .react-flow__handle-left {
  left: -4px;
}

.task-node .react-flow__handle-right {
  right: -4px;
}

.task-node .react-flow__handle-top {
  top: -4px;
}

.task-node .react-flow__handle-bottom {
  bottom: -4px;
}

/* Enhanced visibility for task node handles */
.task-node:hover .handle {
  opacity: 1 !important;
  width: 12px !important;
  height: 12px !important;
  background: var(--accent-color) !important;
  border: 2px solid var(--bg-primary) !important;
  box-shadow: 0 0 0 1px var(--accent-color), 0 2px 4px rgba(0, 0, 0, 0.2) !important;
}

/* Gateway Node */
.gateway-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.gateway-diamond {
  width: 50px;
  height: 50px;
  background: var(--warning-bg-light);
  border: 1px solid var(--warning-color);
  transform: rotate(45deg);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

/* Data Object Node */
.data-object-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.data-object-content {
  width: 36px;
  height: 50px;
  background: var(--bg-secondary);
  border: 1px solid var(--border-color);
  border-radius: 2px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4px;
  position: relative;
}

.data-object-content::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  width: 0;
  height: 0;
  border-left: 8px solid var(--bg-secondary);
  border-top: 8px solid var(--border-color);
  border-bottom: 8px solid transparent;
}

.data-object-icon {
  font-size: 12px;
  margin-bottom: 2px;
}

/* Node Labels */
.node-label {
  font-size: 10px;
  font-weight: 500;
  color: var(--text-primary);
  text-align: center;
  line-height: 1.2;
  max-width: 80px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.gateway-diamond .node-label {
  transform: rotate(-45deg);
  font-size: 8px;
  max-width: 30px;
}

.data-object-content .node-label {
  font-size: 7px;
  max-width: 28px;
  line-height: 1;
  margin-top: 2px;
}

/* Handles */
.handle {
  width: 8px;
  height: 8px;
  background: var(--handle-bg);
  border: 2px solid var(--handle-border);
  border-radius: 50%;
  opacity: 0;
  transition: all 0.2s ease;
  z-index: 10;
}

.handle:hover {
  background: var(--accent-color);
}

/* Connection spots that appear on node hover */
.react-flow__node:hover .handle {
  opacity: 1;
  width: 12px;
  height: 12px;
  background: var(--accent-color);
  border: 2px solid var(--bg-primary);
  box-shadow: 0 0 0 1px var(--accent-color), 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Enhanced hover state for handles when ready to connect */
.react-flow__node:hover .handle.connectable {
  background: var(--accent-color);
  cursor: crosshair;
  animation: pulse-connection 1.5s infinite;
}

/* Pulse animation for connection spots */
@keyframes pulse-connection {
  0% {
    box-shadow: 0 0 0 1px var(--accent-color), 0 2px 4px rgba(0, 0, 0, 0.2);
  }
  50% {
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--accent-color) 50%, transparent), 0 2px 8px rgba(0, 0, 0, 0.3);
  }
  100% {
    box-shadow: 0 0 0 1px var(--accent-color), 0 2px 4px rgba(0, 0, 0, 0.2);
  }
}

/* Node hover states */
.start-event-node:hover .start-event-circle {
  border-color: var(--success-color);
  box-shadow: 0 0 8px color-mix(in srgb, var(--success-color) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.end-event-node:hover .end-event-circle {
  border-color: var(--danger-color);
  box-shadow: 0 0 8px color-mix(in srgb, var(--danger-color) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.task-node:hover .task-content {
  border-color: var(--accent-hover);
  box-shadow: 0 0 8px color-mix(in srgb, var(--accent-color) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.gateway-node:hover .gateway-diamond {
  border-color: var(--warning-color);
  box-shadow: 0 0 8px color-mix(in srgb, var(--warning-color) 30%, transparent);
  transform: rotate(45deg) scale(1.02);
  transition: all 0.2s ease;
}

.data-object-node:hover .data-object-content {
  border-color: var(--text-secondary);
  box-shadow: 0 0 8px color-mix(in srgb, var(--border-color) 50%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

/* Intermediate Event Node */
.intermediate-event-node {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
}

.intermediate-event-circle {
  width: 40px;
  height: 40px;
  border: 2px solid var(--warning-color);
  border-radius: 50%;
  background: var(--warning-bg-light);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.intermediate-event-circle::before {
  content: '';
  position: absolute;
  width: 30px;
  height: 30px;
  border: 1px solid var(--warning-color);
  border-radius: 50%;
}

.event-icon {
  font-size: 14px;
  z-index: 1;
}

.node-label-below {
  position: absolute;
  top: 45px;
  font-size: 10px;
  font-weight: 500;
  color: var(--text-primary);
  text-align: center;
  max-width: 80px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* SubProcess Node */
.subprocess-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.subprocess-content {
  width: 120px;
  height: 80px;
  border: 2px solid var(--text-secondary);
  border-radius: 8px;
  background: var(--bg-secondary);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 8px;
  position: relative;
}

.subprocess-header {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.subprocess-indicator {
  position: absolute;
  bottom: 8px;
  font-size: 12px;
  color: var(--text-secondary);
}

/* Call Activity Node */
.call-activity-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.call-activity-content {
  width: 120px;
  height: 80px;
  border: 2px solid var(--text-secondary);
  border-radius: 8px;
  background: var(--bg-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  position: relative;
}

.call-activity-border {
  position: absolute;
  top: 4px;
  left: 4px;
  right: 4px;
  bottom: 4px;
  border: 1px solid var(--text-secondary);
  border-radius: 4px;
  pointer-events: none;
}

/* Data Store Node */
.data-store-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.data-store-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;
}

.data-store-cylinder {
  position: relative;
  width: 50px;
  height: 60px;
}

.data-store-top {
  width: 50px;
  height: 12px;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
  position: absolute;
  top: 0;
  z-index: 2;
}

.data-store-body {
  width: 50px;
  height: 48px;
  background: var(--bg-secondary);
  border-left: 1px solid var(--border-color);
  border-right: 1px solid var(--border-color);
  position: absolute;
  top: 6px;
}

.data-store-bottom {
  width: 50px;
  height: 12px;
  background: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 50% 50% 50% 50% / 40% 40% 60% 60%;
  position: absolute;
  bottom: 0;
}

/* Group Node */
.group-node {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  position: relative;
}

.group-content {
  min-width: 200px;
  min-height: 150px;
  border: 2px dashed var(--border-color);
  border-radius: 8px;
  background: color-mix(in srgb, var(--bg-secondary) 30%, transparent);
  padding: 8px;
}

.group-header {
  margin-bottom: 8px;
}

.group-body {
  flex: 1;
  min-height: 100px;
}

/* Text Annotation Node */
.text-annotation-node {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.text-annotation-content {
  display: flex;
  align-items: flex-start;
  max-width: 150px;
  padding: 4px;
}

.text-annotation-bracket {
  font-size: 20px;
  font-weight: bold;
  color: var(--text-secondary);
  margin-right: 4px;
  line-height: 1;
}

.text-annotation-text {
  flex: 1;
  padding: 4px;
  background: var(--warning-bg-light);
  border: 1px solid var(--warning-color);
  border-radius: 4px;
  border-left: none;
  color: var(--text-primary);
}

/* Hover states for new nodes */
.intermediate-event-node:hover .intermediate-event-circle {
  border-color: var(--warning-color);
  box-shadow: 0 0 8px color-mix(in srgb, var(--warning-color) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.subprocess-node:hover .subprocess-content {
  border-color: var(--text-primary);
  box-shadow: 0 0 8px color-mix(in srgb, var(--text-secondary) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.call-activity-node:hover .call-activity-content {
  border-color: var(--text-primary);
  box-shadow: 0 0 8px color-mix(in srgb, var(--text-secondary) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.data-store-node:hover .data-store-top,
.data-store-node:hover .data-store-body,
.data-store-node:hover .data-store-bottom {
  border-color: var(--text-secondary);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.group-node:hover .group-content {
  border-color: var(--text-secondary);
  background: color-mix(in srgb, var(--bg-secondary) 50%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

.text-annotation-node:hover .text-annotation-text {
  border-color: var(--warning-color);
  box-shadow: 0 0 4px color-mix(in srgb, var(--warning-color) 30%, transparent);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

/* Participant Node */
.participant-node {
  display: flex;
  flex-direction: row;
  position: relative;
  border: 2px solid var(--accent-color);
  background: color-mix(in srgb, var(--accent-bg-light) 5%, transparent);
  border-radius: 4px;
  overflow: visible;
  box-shadow: 0 2px 4px var(--shadow);
}

.participant-header {
  width: 40px;
  background: var(--accent-bg-light);
  border-right: 2px solid var(--accent-color);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 10px 5px;
  height: 100%;
  flex-shrink: 0;
}

.participant-label {
  font-size: 12px;
  font-weight: 600; 
  color: var(--accent-color);
  white-space: nowrap;
  transform: rotate(-90deg);
  transform-origin: center;
}

.participant-body {
  flex: 1;
  padding: 10px;
  background: transparent;
  position: relative;
  overflow: visible;
  min-height: 200px;
}

/* Lane Node */
.lane-node {
  display: flex;
  flex-direction: row;
  position: relative;
  border: 1px solid var(--border-color);
  background: color-mix(in srgb, var(--bg-secondary) 10%, transparent);
  border-radius: 2px;
  overflow: visible;
  z-index: 1;
}

.lane-header {
  width: 30px;
  background: var(--bg-secondary);
  border-right: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px 3px;
  flex-shrink: 0;
  height: 100%;
}

.lane-label {
  font-size: 11px;
  font-weight: 500;
  color: var(--text-secondary);
  white-space: nowrap;
  transform: rotate(-90deg);
  transform-origin: center;
}

.lane-body {
  flex: 1;
  padding: 8px;
  background: transparent;
  position: relative;
  overflow: visible;
  min-height: 100px;
}

/* Pool (for multiple participants) */
.pool-container {
  border: 2px solid var(--accent-color);
  background: var(--bg-primary);
  position: relative;
  min-width: 500px;
  min-height: 300px;
}

.pool-header {
  background: var(--accent-bg-light);
  padding: 8px 12px;
  border-bottom: 1px solid var(--accent-color);
  font-weight: 600;
  color: var(--accent-color);
  text-align: center;
}

/* Lane Division Styles */
.lane-division {
  position: absolute;
  left: 0px;
  width: 30px;
  background: var(--bg-secondary);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 11px;
  font-weight: 500;
  color: var(--text-secondary);
  border-bottom: 1px solid var(--border-color);
}

.lane-division:last-child {
  border-bottom: none;
}

.lane-division-label {
  transform: rotate(-90deg);
  transform-origin: center;
  white-space: nowrap;
}

.lane-separator {
  position: absolute;
  left: 30px;
  height: 1px;
  background: var(--border-color);
}

.pool-participants {
  display: flex;
  flex-direction: column;
}

/* Hover states */
.participant-node:hover {
  border-color: var(--accent-hover);
  box-shadow: 0 0 8px color-mix(in srgb, var(--accent-color) 30%, transparent);
}

.lane-node:hover {
  border-color: var(--text-secondary);
  box-shadow: 0 0 4px color-mix(in srgb, var(--border-color) 50%, transparent);
}

/* Remove default React Flow node backgrounds in dark mode */
.react-flow__node-default {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.react-flow__node-input {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

.react-flow__node-output {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

/* Ensure our custom nodes don't inherit React Flow backgrounds */
.start-event-node,
.end-event-node,
.gateway-node,
.intermediate-event-node {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
}

/* Dark mode specific overrides */
@media (prefers-color-scheme: dark) {
  .react-flow__node {
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
  }
  
  .start-event-node,
  .end-event-node,
  .gateway-node,
  .intermediate-event-node {
    background: transparent !important;
    border: none !important;
    box-shadow: none !important;
  }
}
